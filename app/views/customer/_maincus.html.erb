<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <!--Bootstrap 5 icons CDN-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    <title>CRUD Operations</title>

    <link rel="stylesheet" href="style.css">
    <style>
        table tr td{
    vertical-align: middle;
}

td button{
    margin: 5px;
}

td button i{
    font-size: 20px;
}


.modal-header{
    background: #0d6efd;
    color: #fff;
}

.modal-body form {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    padding: 0;
}

.modal-body form .imgholder{
    width: 200px;
    height: 200px;
    position: relative;
    border-radius: 20px;
    overflow: hidden;
}

.imgholder .upload{
    position: absolute;
    bottom: 0;
    left: 10;
    width: 100%;
    height: 100px;
    background: rgba(0,0,0,0.3);
    display: none;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

.upload i{
    color: #fff;
    font-size: 35px;
}

.imgholder:hover .upload{
    display: flex;
}

.imgholder .upload input{
    display: none;
}

.modal-body form .inputField{
    flex-basis: 68%;
    border-left: 5px groove blue;
    padding-left: 20px;
}

form .inputField > div{
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

form .inputField > div label{
    font-size: 20px;
    font-weight: 500;
}

#userForm form .inputField > div label::after{
    content: "*";
    color: red;
}

form .inputField > div input{
    width: 75%;
    padding: 10px;
    border: none;
    outline: none;
    background: transparent;
    border-bottom: 2px solid blue;
}

.modal-footer .submit{
    font-size: 18px;
}


#readData form .inputField > div input{
    color: #000;
    font-size: 18px;
}
    </style>
  </head>
  <body>
    

    <section class="p-3">

        <div class="row">
            <div class="col-12">
                <button class="btn btn-primary newUser" data-bs-toggle="modal" data-bs-target="#userForm">New User <i class="bi bi-people"></i></button>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <table class="table table-striped table-hover mt-3 text-center table-bordered">

                    <thead>
                        <tr>
                            <th>S.No</th>
                            <th>Picture</th>
                            <th>Name</th>
                            <th>Age</th>
                            <th>City</th>
                            <th>Email</th>
                            <th>Password</th>
                            <th>Phone</th>
                            <th>Post</th>
                            <th>Start Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>

                    <tbody id="data"></tbody>

                </table>
            </div>
        </div>

    </section>


    <!--Modal Form-->
    <div class="modal fade" id="userForm">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title">Fill the Form</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">

                    <form action="#" id="myForm">

                        <div class="card imgholder">
                            <label for="imgInput" class="upload">
                                <input type="file" name="" id="imgInput">
                                <i class="bi bi-plus-circle-dotted"></i>
                            </label>
                            <img src="link_to_image" alt="Profile Image" width="200" height="200" class="img">
                        </div>

                        <div class="inputField">
                            <div>
                                <label for="name">Name:</label>
                                <input type="text" name="" id="name" value="NH" required>
                            </div>
                            <div>
                                <label for="age">Age:</label>
                                <input type="number" name="" id="age" required>
                            </div>
                            <div>
                                <label for="city">City:</label>
                                <input type="text" name="" id="city" value="123 Main St" required>
                            </div>
                            <div>
                                <label for="email">E-mail:</label>
                                <input type="email" name="" id="email" value="nhau8179@gmail.com" required>
                            </div>
                            <div>
                                <label for="pass">Password:</label>
                                <input type="password" name="" id="pass" required>
                            </div>
                            <div>
                                <label for="trang_thai">Trạng thái:</label>
                                <input type="checkbox" id="trang_thai" name="trang_thai" value="1">
                            </div>
                            <div>
                                <label for="phone">Number:</label>
                                <input type="text" name="" id="phone" minlength="11" maxlength="11" value="1234" required>
                            </div>
                            <div>
                                <label for="post">Post:</label>
                                <input type="text" name="" id="post" required>
                            </div>
                            <div>
                                <label for="sDate">date of birth:</label>
                                <input type="date" name="" id="sDate" value="2024-11-03" required>
                            </div>
                        </div>


                    </form>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" form="myForm" class="btn btn-primary submit">Submit</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Hiển Thị Dữ Liệu -->
    <div class="modal fade" id="readData">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title">Profile</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">

                    <form action="#" id="myForm">

                        <div class="card imgholder">
                            <img src="./image/Profile Icon.webp" alt="" width="200" height="200" class="showImg">
                        </div>

                        <div class="inputField">
                            <div>
                                <label for="name">Name:</label>
                                <input type="text" name="" id="showName" disabled>
                            </div>
                            <div>
                                <label for="age">Age:</label>
                                <input type="number" name="" id="showAge" disabled>
                            </div>
                            <div>
                                <label for="city">City:</label>
                                <input type="text" name="" id="showCity" disabled>
                            </div>
                            <div>
                                <label for="email">E-mail:</label>
                                <input type="email" name="" id="showEmail" disabled>
                            </div>
                            <div>
                                <label for="phone">Number:</label>
                                <input type="text" name="" id="showPhone" minlength="11" maxlength="11" disabled>
                            </div>
                            <div>
                                <label for="post">Post:</label>
                                <input type="text" name="" id="showPost" disabled>
                            </div>
                            <div>
                                <label for="sDate">date of birth:</label>
                                <input type="date" name="" id="showsDate" disabled>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>


    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

    <script>
   // Lấy đối tượng form từ DOM bằng ID
    var form = document.getElementById("myForm"),
    // Lấy input hình ảnh từ DOM bằng class
        imgInput = document.querySelector(".img"),
    // Lấy input file hình ảnh từ DOM bằng ID
        file = document.getElementById("imgInput"),
    // Lấy input tên người dùng từ DOM bằng ID
        userName = document.getElementById("name"),
    // Lấy input tuổi từ DOM bằng ID
        age = document.getElementById("age"),
    // Lấy input thành phố từ DOM bằng ID
        city = document.getElementById("city"),
    // Lấy input email từ DOM bằng ID
        email = document.getElementById("email"),
    // Lấy input số điện thoại từ DOM bằng ID
        phone = document.getElementById("phone"),
    // Lấy input bài viết từ DOM bằng ID
        post = document.getElementById("post"),
    // Lấy input ngày từ DOM bằng ID
        sDate = document.getElementById("sDate"),
    // Lấy nút gửi từ DOM bằng class
        submitBtn = document.querySelector(".submit"),
    // Lấy phần tử hiển thị thông tin người dùng từ DOM bằng ID
        userInfo = document.getElementById("data"),
    // Lấy modal chứa form người dùng từ DOM bằng ID
        modal = document.getElementById("userForm"),
    // Lấy tiêu đề modal từ DOM
        modalTitle = document.querySelector("#userForm .modal-title"),
    // Lấy nút tạo người dùng mới từ DOM bằng class
        newUserBtn = document.querySelector(".newUser");


let getData = localStorage.getItem('userProfile') ? JSON.parse(localStorage.getItem('userProfile')) : []

let isEdit = false, editId
showInfo()

newUserBtn.addEventListener('click', () => {
    // Đặt văn bản nút gửi thành 'Submit'
    submitBtn.innerText = 'Submit'
    // Đặt tiêu đề modal thành "Điền vào biểu mẫu"
    modalTitle.innerText = "Fill the Form"
    // Đặt trạng thái chỉnh sửa thành false (không phải đang chỉnh sửa)
    isEdit = false
    // Đặt ảnh đại diện mặc định
    imgInput.src = "./image/Profile Icon.webp"
    // Đặt lại biểu mẫu về trạng thái ban đầu
    form.reset()
})


file.onchange = function() {
    // Kiểm tra kích thước tệp có nhỏ hơn 1MB (1MB = 1000000 bytes)
    if (file.files[0].size < 1000000) {
        // Tạo một FileReader mới
        var fileReader = new FileReader();
        // Khi tệp được tải lên, thực hiện hàm này
        fileReader.onload = function(e) {
            // Lưu URL của ảnh vào biến imgUrl
            imgUrl = e.target.result
            
            // Cập nhật nguồn ảnh của imgInput
            imgInput.src = imgUrl
        }
        // Đọc tệp dưới dạng Data URL
        fileReader.readAsDataURL(file.files[0])
    } else {
        // Hiển thị thông báo lỗi nếu tệp quá lớn
        alert("This file is too large!")
    }
}

function showInfo() {
    // Xóa tất cả các chi tiết nhân viên hiện có
    document.querySelectorAll('.employeeDetails').forEach(info => info.remove())

    // Duyệt qua dữ liệu nhân viên và hiển thị thông tin
    getData.forEach((element, index) => {
        // Tạo một dòng mới cho mỗi nhân viên
        let createElement = `<tr class="employeeDetails">
            <td>${index + 1}</td> <!-- Số thứ tự -->
            <td><img src="${element.picture}" alt="" width="50" height="50"></td> <!-- Ảnh đại diện -->
            <td>${element.employeeName}</td> <!-- Tên nhân viên -->
            <td>${element.employeeAge}</td> <!-- Tuổi nhân viên -->
            <td>${element.employeeCity}</td> <!-- Thành phố nhân viên -->
            <td>${element.employeeEmail}</td> <!-- Email nhân viên -->
            <td>${element.employeePhone}</td> <!-- Số điện thoại nhân viên -->
            <td>${element.employeePost}</td> <!-- Chức vụ nhân viên -->
            <td>${element.startDate}</td> <!-- Ngày bắt đầu làm việc -->

            <td>
                <!-- Nút xem thông tin nhân viên -->
                <button class="btn btn-success" onclick="readInfo('${element.picture}', '${element.employeeName}', '${element.employeeAge}', '${element.employeeCity}', '${element.employeeEmail}', '${element.employeePhone}', '${element.employeePost}', '${element.startDate}')" data-bs-toggle="modal" data-bs-target="#readData"><i class="bi bi-eye"></i></button>

                <!-- Nút chỉnh sửa thông tin nhân viên -->
                <button class="btn btn-primary" onclick="editInfo(${index}, '${element.picture}', '${element.employeeName}', '${element.employeeAge}', '${element.employeeCity}', '${element.employeeEmail}', '${element.employeePhone}', '${element.employeePost}', '${element.startDate}')" data-bs-toggle="modal" data-bs-target="#userForm"><i class="bi bi-pencil-square"></i></button>

                <!-- Nút xóa thông tin nhân viên -->
                <button class="btn btn-danger" onclick="deleteInfo(${index})"><i class="bi bi-trash"></i></button>
            </td>
        </tr>`

        // Thêm dòng mới vào bảng thông tin người dùng
        userInfo.innerHTML += createElement
    })
}

showInfo()


function readInfo(pic, name, age, city, email, phone, post, sDate) {
    // Cập nhật ảnh đại diện
    document.querySelector('.showImg').src = pic
    // Cập nhật tên
    document.querySelector('#showName').value = name
    // Cập nhật tuổi
    document.querySelector("#showAge").value = age
    // Cập nhật thành phố
    document.querySelector("#showCity").value = city
    // Cập nhật email
    document.querySelector("#showEmail").value = email
    // Cập nhật số điện thoại
    document.querySelector("#showPhone").value = phone
    // Cập nhật bài viết
    document.querySelector("#showPost").value = post
    // Cập nhật ngày
    document.querySelector("#showsDate").value = sDate
}

function editInfo(index, pic, name, Age, City, Email, Phone, Post, Sdate) {
    // Đặt trạng thái chỉnh sửa thành true
    isEdit = true
    // Lưu chỉ mục của người dùng đang chỉnh sửa
    editId = index
    // Cập nhật ảnh đại diện
    imgInput.src = pic
    // Cập nhật tên người dùng
    userName.value = name
    // Cập nhật tuổi
    age.value = Age
    // Cập nhật thành phố
    city.value = City
    // Cập nhật email
    email.value = Email
    // Cập nhật số điện thoại
    phone.value = Phone
    // Cập nhật bài viết
    post.value = Post
    // Cập nhật ngày
    sDate.value = Sdate
    // Thay đổi văn bản nút gửi thành "Cập nhật"
    submitBtn.innerText = "Update"
    // Thay đổi tiêu đề modal thành "Cập nhật biểu mẫu"
    modalTitle.innerText = "Update The Form"
}

function deleteInfo(index) {
    // Hiển thị hộp thoại xác nhận trước khi xóa
    if (confirm("Are you sure want to delete?")) {
        // Xóa thông tin tại chỉ mục đã cho trong mảng getData
        getData.splice(index, 1)
        // Cập nhật lại dữ liệu trong localStorage
        localStorage.setItem("userProfile", JSON.stringify(getData))
        // Cập nhật hiển thị thông tin sau khi xóa
        showInfo()
    }
}


    form.addEventListener('submit', (e) => {
        // Ngăn chặn hành động mặc định của form (gửi đi)
        e.preventDefault()

        // Tạo đối tượng thông tin từ các trường trong biểu mẫu
        const information = {
            // Kiểm tra xem có ảnh đại diện không, nếu không thì sử dụng ảnh mặc định
            picture: imgInput.src == undefined ? "./image/Profile Icon.webp" : imgInput.src,
            employeeName: userName.value,  // Tên nhân viên
            employeeAge: age.value,         // Tuổi nhân viên
            employeeCity: city.value,       // Thành phố nhân viên
            employeeEmail: email.value,     // Email nhân viên
            employeePhone: phone.value,     // Số điện thoại nhân viên
            employeePost: post.value,       // Chức vụ nhân viên
            startDate: sDate.value          // Ngày bắt đầu làm việc
        }

        // Kiểm tra trạng thái chỉnh sửa
        if (!isEdit) {
            // Nếu không chỉnh sửa, thêm thông tin mới vào danh sách
            getData.push(information)
        } else {
            // Nếu đang chỉnh sửa, cập nhật thông tin trong danh sách
            isEdit = false
            getData[editId] = information
        }

        // Lưu danh sách thông tin vào localStorage
        localStorage.setItem('userProfile', JSON.stringify(getData))

        // Đặt lại văn bản nút gửi và tiêu đề modal về trạng thái ban đầu
        submitBtn.innerText = "Submit"
        modalTitle.innerHTML = "Fill The Form"

        // Hiển thị thông tin trong bảng
        showInfo()

        // Đặt lại biểu mẫu về trạng thái ban đầu
        form.reset()

        // Đặt ảnh đại diện về ảnh mặc định
        imgInput.src = "./image/Profile Icon.webp"  

        // Đóng modal (bình luận lại để có thể sử dụng khi cần)
        // modal.style.display = "none"
        // document.querySelector(".modal-backdrop").remove()
    })
    </script>
  </body>
</html>